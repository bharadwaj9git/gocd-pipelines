format_version: 10
pipelines:
  expense-create:
    group: App-Deployment
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    materials:
      git-c979c3d:
        git: https://github.com/bharadwaj9git/expense-terraform.git
        shallow_clone: true
        auto_update: true
        branch: main
    stages:
      - DEV:
          fetch_materials: true
          environment_variables: { env: dev }
          approval: { type: manual }
          jobs:
            terraform:
              tasks:
                - exec: { command: terraform , arguments: ["init", "-backend-config", "env-dev/state.tfvars"] }
                - exec: { command: terraform ,  arguments: ["apply","-var-file", "env-dev/main.tfvars", "auto-approve"] }
      - PROD:
          fetch_materials: true
          environment_variables: { env: prod }
          approval: { type: manual }
          jobs:
            terraform:
              tasks:
                - exec: { command: terraform , arguments: [ "init", "-backend-config", "env-dev/state.tfvars" ] }
                - exec: { command: terraform ,  arguments: [ "apply","-var-file", "env-dev/main.tfvars", "-auto-approve" ] }

#    to readable way we created above code previously code like below
#      - PROD:
#          fetch_materials: true
#          environment_variables:
#            env: prod
#          approval:
#            type: manual
#          jobs:
#            terraform:
#              timeout: 0
#              tasks:
#                - exec:
#                    command: terraform
#                    arguments:
#                      - init
#                      - -backend-config
#                      - env-prod/state.tfvars
#                - exec:
#                    run_if: passed
#                    command: terraform
#                    arguments:
#                      - apply
#                      - -var-file
#                      - env-prod/main.tfvars
#                      - auto-approve